/**
 * Rapid Pass API
 * API docs for Rapid Pass
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { RefreshTokenResponse } from '../models';
import { RequestOtpDTO } from '../models';
import { VerifyOtpDTO } from '../models';
/**
 * AuthApi - axios parameter creator
 * @export
 */
export declare const AuthApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Request a OTP
     * @param {RequestOtpDTO} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignIn: (body: RequestOtpDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Verify OTP
     * @param {VerifyOtpDTO} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerVerifyOtp: (body: VerifyOtpDTO, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AuthApi - functional programming interface
 * @export
 */
export declare const AuthApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Request a OTP
     * @param {RequestOtpDTO} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignIn(body: RequestOtpDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     *
     * @summary Verify OTP
     * @param {VerifyOtpDTO} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerVerifyOtp(body: VerifyOtpDTO, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<RefreshTokenResponse>>>;
};
/**
 * AuthApi - factory interface
 * @export
 */
export declare const AuthApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Request a OTP
     * @param {RequestOtpDTO} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignIn(body: RequestOtpDTO, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     *
     * @summary Verify OTP
     * @param {VerifyOtpDTO} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerVerifyOtp(body: VerifyOtpDTO, options?: AxiosRequestConfig): Promise<AxiosResponse<RefreshTokenResponse>>;
};
/**
 * AuthApi - object-oriented interface
 * @export
 * @class AuthApi
 * @extends {BaseAPI}
 */
export declare class AuthApi extends BaseAPI {
    /**
     *
     * @summary Request a OTP
     * @param {RequestOtpDTO} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerSignIn(body: RequestOtpDTO, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     *
     * @summary Verify OTP
     * @param {VerifyOtpDTO} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    authControllerVerifyOtp(body: VerifyOtpDTO, options?: AxiosRequestConfig): Promise<AxiosResponse<RefreshTokenResponse>>;
}
