/**
 * Rapid Pass API
 * API docs for Rapid Pass
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { CheckoutResponseDto } from '../models';
import { CreateCheckoutDto } from '../models';
/**
 * CheckoutApi - axios parameter creator
 * @export
 */
export declare const CheckoutApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Finalize checkout
     * @param {string} checkoutId
     * @param {string} secret
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    checkoutControllerFinalizeCheckout: (checkoutId: string, secret: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Start checkout
     * @param {CreateCheckoutDto} body
     * @param {string} merchantId
     * @param {string} productId
     * @param {string} planId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    checkoutControllerStartCheckout: (body: CreateCheckoutDto, merchantId: string, productId: string, planId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CheckoutApi - functional programming interface
 * @export
 */
export declare const CheckoutApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Finalize checkout
     * @param {string} checkoutId
     * @param {string} secret
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    checkoutControllerFinalizeCheckout(checkoutId: string, secret: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<void>>>;
    /**
     *
     * @summary Start checkout
     * @param {CreateCheckoutDto} body
     * @param {string} merchantId
     * @param {string} productId
     * @param {string} planId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    checkoutControllerStartCheckout(body: CreateCheckoutDto, merchantId: string, productId: string, planId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<CheckoutResponseDto>>>;
};
/**
 * CheckoutApi - factory interface
 * @export
 */
export declare const CheckoutApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Finalize checkout
     * @param {string} checkoutId
     * @param {string} secret
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    checkoutControllerFinalizeCheckout(checkoutId: string, secret: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     *
     * @summary Start checkout
     * @param {CreateCheckoutDto} body
     * @param {string} merchantId
     * @param {string} productId
     * @param {string} planId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    checkoutControllerStartCheckout(body: CreateCheckoutDto, merchantId: string, productId: string, planId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<CheckoutResponseDto>>;
};
/**
 * CheckoutApi - object-oriented interface
 * @export
 * @class CheckoutApi
 * @extends {BaseAPI}
 */
export declare class CheckoutApi extends BaseAPI {
    /**
     *
     * @summary Finalize checkout
     * @param {string} checkoutId
     * @param {string} secret
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CheckoutApi
     */
    checkoutControllerFinalizeCheckout(checkoutId: string, secret: string, options?: AxiosRequestConfig): Promise<AxiosResponse<void>>;
    /**
     *
     * @summary Start checkout
     * @param {CreateCheckoutDto} body
     * @param {string} merchantId
     * @param {string} productId
     * @param {string} planId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CheckoutApi
     */
    checkoutControllerStartCheckout(body: CreateCheckoutDto, merchantId: string, productId: string, planId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<CheckoutResponseDto>>;
}
