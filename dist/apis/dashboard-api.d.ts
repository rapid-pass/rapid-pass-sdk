/**
 * Rapid Pass API
 * API docs for Rapid Pass
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { AxiosResponse, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { CreateProductDto } from '../models';
import { MerchantDto } from '../models';
import { PlanDto } from '../models';
import { ProductDto } from '../models';
/**
 * DashboardApi - axios parameter creator
 * @export
 */
export declare const DashboardApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a plan for a product
     * @param {PlanDto} body
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerCreatePlan: (body: PlanDto, merchantId: string, productId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Create new product for a merchant
     * @param {CreateProductDto} body
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerCreateProduct: (body: CreateProductDto, merchantId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get merchant info
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetMerchants: (merchantId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get all plans for a product
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetPlans: (merchantId: string, productId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get a specific product
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetProduct: (merchantId: string, productId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get products owned by a merchant
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetProducts: (merchantId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DashboardApi - functional programming interface
 * @export
 */
export declare const DashboardApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a plan for a product
     * @param {PlanDto} body
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerCreatePlan(body: PlanDto, merchantId: string, productId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<PlanDto>>>;
    /**
     *
     * @summary Create new product for a merchant
     * @param {CreateProductDto} body
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerCreateProduct(body: CreateProductDto, merchantId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ProductDto>>>;
    /**
     *
     * @summary Get merchant info
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetMerchants(merchantId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<MerchantDto>>>;
    /**
     *
     * @summary Get all plans for a product
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetPlans(merchantId: string, productId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<PlanDto>>>>;
    /**
     *
     * @summary Get a specific product
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetProduct(merchantId: string, productId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<ProductDto>>>;
    /**
     *
     * @summary Get products owned by a merchant
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetProducts(merchantId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => Promise<AxiosResponse<Array<ProductDto>>>>;
};
/**
 * DashboardApi - factory interface
 * @export
 */
export declare const DashboardApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Create a plan for a product
     * @param {PlanDto} body
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerCreatePlan(body: PlanDto, merchantId: string, productId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<PlanDto>>;
    /**
     *
     * @summary Create new product for a merchant
     * @param {CreateProductDto} body
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerCreateProduct(body: CreateProductDto, merchantId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ProductDto>>;
    /**
     *
     * @summary Get merchant info
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetMerchants(merchantId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<MerchantDto>>;
    /**
     *
     * @summary Get all plans for a product
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetPlans(merchantId: string, productId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<PlanDto>>>;
    /**
     *
     * @summary Get a specific product
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetProduct(merchantId: string, productId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ProductDto>>;
    /**
     *
     * @summary Get products owned by a merchant
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    merchantsControllerGetProducts(merchantId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<ProductDto>>>;
};
/**
 * DashboardApi - object-oriented interface
 * @export
 * @class DashboardApi
 * @extends {BaseAPI}
 */
export declare class DashboardApi extends BaseAPI {
    /**
     *
     * @summary Create a plan for a product
     * @param {PlanDto} body
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApi
     */
    merchantsControllerCreatePlan(body: PlanDto, merchantId: string, productId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<PlanDto>>;
    /**
     *
     * @summary Create new product for a merchant
     * @param {CreateProductDto} body
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApi
     */
    merchantsControllerCreateProduct(body: CreateProductDto, merchantId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ProductDto>>;
    /**
     *
     * @summary Get merchant info
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApi
     */
    merchantsControllerGetMerchants(merchantId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<MerchantDto>>;
    /**
     *
     * @summary Get all plans for a product
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApi
     */
    merchantsControllerGetPlans(merchantId: string, productId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<PlanDto>>>;
    /**
     *
     * @summary Get a specific product
     * @param {string} merchantId
     * @param {string} productId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApi
     */
    merchantsControllerGetProduct(merchantId: string, productId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<ProductDto>>;
    /**
     *
     * @summary Get products owned by a merchant
     * @param {string} merchantId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardApi
     */
    merchantsControllerGetProducts(merchantId: string, options?: AxiosRequestConfig): Promise<AxiosResponse<Array<ProductDto>>>;
}
